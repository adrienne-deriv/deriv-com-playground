name: Build to Cloudflare Pages

permissions:
    actions: write
    checks: write
    contents: write
    deployments: write
    pull-requests: write
    statuses: write

on:
    pull_request:
        types: [opened, synchronize]

env:
    NODE_OPTIONS: '--max-old-space-size=8192'

concurrency:
    group: cloudflare-pages-build-${{ github.head_ref }}
    cancel-in-progress: true

jobs:
    build_to_cloudflare_pages:
        runs-on: Ubuntu-latest
        steps:
            - name: Checkout to repo
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Setup node
              uses: actions/setup-node@v2

            - name: Generate build status comment
              id: build_status_comment
              uses: actions/github-script@v3
              with:
                  script: |
                      const preview_url = "https://" + "${{ github.head_ref }}" + ".deriv-com-test-links.pages.dev"
                      const comment = [
                        '## Cloudflare Pages Preview link',
                        '| Name | Result |',
                        '| :--- | :------ |',
                        `| **Build status**  | In progress ‚è≥ |`,
                        `| **Preview URL**  | [Visit Preview](${preview_url}) |`,
                        ''
                      ].join('\n')
                      core.setOutput("comment", comment);

            - name: Update build status comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  only_update: true
                  header: Cloudflare Pages Preview Comment
                  number: ${{github.event.issue.number}}
                  message: ${{steps.build_status_comment.outputs.comment}}

            - name: Get build output from master cache
              uses: actions/cache/restore@v3
              with:
                  key: master-cache-public
                  restore-keys: |
                      master-cache-public-replica
                  path: |
                      .cache
                      public

            - name: Get cached dependencies
              id: cache-npm
              uses: actions/cache/restore@v3
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}

            - name: Install dependencies
              if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
              run: npm ci

            - name: Build project
              id: build-project
              run: npm run build

            - name: Upload build artifact
              uses: actions/upload-artifact@v2
              with:
                  name: build-${{ github.head_ref }}
                  path: .
