name: Deploy to Cloudflare Pages

permissions:
    actions: write
    checks: write
    contents: write
    deployments: write
    pull-requests: write
    statuses: write

on:
    workflow_run:
        workflows: ['Build to Cloudflare Pages']
        types:
            - completed

concurrency:
    group: cloudflare-pages-deploy-${{ github.head_ref }}
    cancel-in-progress: true

jobs:
    build_to_cloudflare_pages:
        runs-on: Ubuntu-latest
            if: >
              github.event.workflow_run.event == 'pull_request' &&
              github.event.workflow_run.conclusion == 'success'
        steps:
      - name: 'Download artifact'
              uses: actions/github-script@v3.1.0
              with:
                script: |
                  var artifacts = await github.actions.listWorkflowRunArtifacts({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    run_id: ${{github.event.workflow_run.id }},
                  });
                  var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                    return artifact.name == 'build-${{github.event.workflow_run.head_branch}}'
                  })[0];
                  var download = await github.actions.downloadArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: matchArtifact.id,
                    archive_format: 'zip',
                  });
                  var fs = require('fs');
                  fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));

            - run: unzip pr.zip

            - name: Publish to Cloudflare Pages
              id: publish-to-pages
              env:
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TEST_LINKS_API_TOKEN }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_TEST_LINKS_ACCOUNT_ID }}
              run: |
                  echo "Installing Wrangler CLI"
                  npm i -g wrangler

                  echo "Deploying build to Cloudflare Pages"
                  directory='public'
                  projectName='deriv-com'
                  branch=$GITHUB_HEAD_REF

                  preview_url=$(wrangler pages deploy $directory --project-name=$projectName --branch=$branch > log.txt 2>&1; echo $?)
                  echo "------"
                  cat log.txt

                  branchName=$(echo $branch | sed 's/[\/_]/-/g')
                  if grep -q "Deployment complete" log.txt; then
                    echo "preview_url=https://$branchName.deriv-com-test-links.pages.dev" > "$GITHUB_OUTPUT"
                  else
                    echo "Deployment to Cloudflare Pages failed."
                    exit 1
                  fi

            - name: Retrieve Cloudflare Pages Preview URL
              id: cloudflare_pages_preview_url
              uses: actions/github-script@v3
              with:
                  script: |
                      const preview_url = "${{ steps.publish-to-pages.outputs.preview_url }}"
                      const comment = [
                        '| Name | Result |',
                        '| :--- | :------ |',
                        `| **Build status**  | Completed âœ… |`,
                        `| **Preview URL**  | [Visit Preview](${preview_url}) |`,
                        ''
                      ].join('\n')
                      core.setOutput("comment", comment);

            - name: Post Cloudflare Pages Preview comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  header: Cloudflare Pages Preview Comment
                  number: ${{github.event.issue.number}}
                  message: ${{steps.cloudflare_pages_preview_url.outputs.comment}}
