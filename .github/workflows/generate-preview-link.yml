name: Generate preview link

permissions:
    actions: write
    checks: write
    contents: write
    deployments: write
    pull-requests: write
    statuses: write

on:
    workflow_run:
        workflows: ['Pre-generate preview link']
        types:
            - completed

env:
    NODE_OPTIONS: '--max-old-space-size=8192'

concurrency:
    group: cloudflare-pages-build-${{ github.event.workflow_run.head_branch }}
    cancel-in-progress: true

jobs:
    build_to_cloudflare_pages:
        runs-on: Ubuntu-latest
        if: >
            github.event.workflow_run.event == 'pull_request' &&
            github.event.workflow_run.conclusion == 'success'
        steps:
            - name: 'Echo stuff'
              run: |
                  echo "${{ toJson(github.event.workflow_run.pull_requests) }}[0].head.ref"
                  echo "${{ toJson(github.event.workflow_run.pull_requests[0].head.sha) }}"
                  echo "${{ toJson(github.event.workflow_run.pull_requests) }}"[0].number

            - name: 'Download artifact'
              uses: actions/github-script@v3.1.0
              with:
                  script: |
                      var artifacts = await github.actions.listWorkflowRunArtifacts({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        run_id: ${{github.event.workflow_run.id }},
                      });
                      
                      var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                        return artifact.name == `pr-${{ github.event.workflow_run.id }}`
                      })[0];
                    
                      var download = await github.actions.downloadArtifact({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        artifact_id: matchArtifact.id,
                        archive_format: 'zip',
                      });

                      var fs = require('fs');
                      fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));

            - run: unzip pr.zip

            - name: 'Updte preview link build status'
              id: update_preview_url
              uses: actions/github-script@v3
              with:
                  github-token: ${{ github.token }}
                  script: |
                      var fs = require('fs');
                      var issue_number = Number(fs.readFileSync('./NR'));
                                            
                      const preview_url = `https://${{github.event.workflow_run.head_branch}}.deriv-com-preview-links.pages.dev`
                      const comment = [
                          `**Preview Link**: ${preview_url}`,
                          '| Name | Result |',
                          '| :--- | :------ |',
                          `| **Build status**  | Building ⏳ |`,
                          `| **Preview URL**  | [Visit Preview](${preview_url}) |`,
                          ''
                        ].join('\n')
                      core.setOutput("comment", comment);
                      core.setOutput("issue_number", issue_number)

            - name: Post Cloudflare Pages Preview comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  header: Cloudflare Pages Preview Comment
                  number: ${{steps.update_preview_url.outputs.issue_number}}
                  message: ${{steps.update_preview_url.outputs.comment}}

            - name: Checkout to repo
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.workflow_run.head_sha }}

            - name: Setup node
              uses: actions/setup-node@v2

            - name: Get build output from master cache
              uses: actions/cache/restore@v3
              with:
                  key: master-cache-public
                  restore-keys: |
                      master-cache-public-replica
                  path: |
                      .cache
                      public

            - name: Get cached dependencies
              id: cache-npm
              uses: actions/cache/restore@v3
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}

            - name: Install dependencies
              if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
              run: npm ci

            - name: Build project
              id: build-project
              run: npm run build

            - name: Publish to Cloudflare Pages
              id: publish-to-pages
              env:
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TEST_LINKS_API_TOKEN }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_TEST_LINKS_ACCOUNT_ID }}
              run: |
                  echo "Installing Wrangler CLI"
                  npm i -g wrangler

                  echo "Deploying build to Cloudflare Pages"
                  directory='public'
                  projectName='deriv-com-preview-links'
                  branch=${{github.event.workflow_run.head_branch}}

                  preview_url=$(wrangler pages deploy $directory --project-name=$projectName --branch=$branch > log.txt 2>&1; echo $?)
                  echo "------"
                  cat log.txt

                  branchName=$(echo $branch | sed 's/[\/_]/-/g')
                  if grep -q "Deployment complete" log.txt; then
                    echo "preview_url=https://$branchName.deriv-com-preview-links.pages.dev" > "$GITHUB_OUTPUT"
                  else
                    echo "Deployment to Cloudflare Pages failed."
                    exit 1
                  fi

            - name: 'Generate preview link comment'
              id: generate_preview_url
              uses: actions/github-script@v3
              with:
                  github-token: ${{ github.token }}
                  script: |              
                      const preview_url = `https://${{github.event.workflow_run.head_branch}}.deriv-com-preview-links.pages.dev`
                      const comment = [
                          `**Preview Link**: ${preview_url}`,
                          '| Name | Result |',
                          '| :--- | :------ |',
                          `| **Build status**  | Completed ✅ |`,
                          `| **Preview URL**  | [Visit Preview](${preview_url}) |`,
                          ''
                        ].join('\n')
                      core.setOutput("comment", comment);

            - name: Post Cloudflare Pages Preview comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  header: Cloudflare Pages Preview Comment
                  number: ${{steps.update_preview_url.outputs.issue_number}}
                  message: ${{steps.generate_preview_url.outputs.comment}}
